//
// Created by elias on 22.02.2020.
//
#include <vector>

#include <SFML/System.hpp>

#include "../includes/miniplatform/entities.h"
#include "../includes/miniplatform/level.h"


Level::Level() = default;

void Level::reset(std::vector<sf::String> &current_level_map)
{
    lavas.clear();
    coins.clear();
    player = Player(sf::Vector2f(100, 100));
    level_map = LevelMap(current_level_map);
    for (int i = 0; i < level_map.getHeight(); i++)
    {
        sf::String line = level_map.getLine(i);
        for (int j = 0; j < line.getSize(); j++)
        {
            char el = (char)line[j];
            float curr_x = (float)j*BLOCK_SIZE, curr_y = (float)i*BLOCK_SIZE;
            if (el == 'v' || el == '|' || el == '=')
            {
                Lava lava(curr_x, curr_y, el == 'v', el == '=', 0);
                lavas.push_back(lava);
            }
            else if (el == 'o')
            {
                Coin coin(curr_x, curr_y);
                coins.push_back(coin);
            }
            else if (el == '@')
            {
                player.set_position(sf::Vector2f(curr_x, curr_y));
            }
        }
    }
}
void Level::update(float frame)
{
    handle_keypress(frame);
    player.update(frame, level_map);
    sf::Vector2f player_offset = player.get_offset();
    for (auto it = coins.begin(); it != coins.end(); )
    {
        it->set_offset(player_offset);
        it->update(frame, level_map);
        bool is_taken_coin =  player.is_touches(*it);
        it = is_taken_coin ? coins.erase(it) : it + 1;
        if (is_taken_coin)
        {
            player.touch_coin();
        }
    }
    if (coins.empty())
    {
        player.set_won();
    }
    for (auto &lava: lavas)
    {
        lava.set_offset(player_offset);
        lava.update(frame, level_map);
        if (player.is_touches(lava))
        {
            player.set_dead();
        }
    }
    level_map.update(frame);
}
void Level::redraw(sf::RenderWindow &window)
{
    sf::Color wall_color = sf::Color(60, 60, 60);
    sf::Color lava_color = sf::Color(255, 100, 100);
    sf::Vector2f player_offset = player.get_offset();
    float pos_x, pos_y;
    for (int i = 0; i < level_map.getHeight(); i++)
    {
        sf::String line = level_map.getLine(i);
        pos_y = (float)i * BLOCK_SIZE;
        for (int j = 0; j < line.getSize(); j++)
        {
            pos_x = (float)j * BLOCK_SIZE;
            char el = (char)line[j];
            if (el == '#')
            {
                tile_rect.setFillColor(level_map.create_time_stop_color(wall_color));
            }
            else if (el == '+')
            {
                tile_rect.setFillColor(level_map.create_time_stop_color(lava_color));
            }
            else
            {
                continue;
            }
            tile_rect.setPosition(pos_x - player_offset.x, pos_y - player_offset.y);
            window.draw(tile_rect);
        }
    }
    player.update_display(level_map);
    player.render(window);
    for (auto &lava: lavas)
    {
        lava.update_display(level_map);
        lava.render(window);
    }
    for (auto &coin: coins)
    {
        coin.update_display(level_map);
        coin.render(window);
    }
}
bool Level::is_running()
{
    return !player.is_died() && !player.is_winner();
}
bool Level::is_completed()
{
    return player.is_winner();
}
std::vector<std::vector<sf::String>> Level::get_default_set()
{
    std::vector<sf::String> level1 = {
            "............................................................................##..",
            ".............................................................................#..",
            ".............................................................................#..",
            ".............................................................................#..",
            ".............................................................................#..",
            ".............................................................................#..",
            "..##..............................................................###........#..",
            "..#................................................##......##....##+##.......#..",
            "..#.................................o.o......##..................#+++#.......#..",
            "..#..............................................................##+##.......#..",
            "..#................................#####..........................#v#........#..",
            "..#..........................................................................#..",
            "..#.......................................o.o................................#..",
            "..#.....................o....................................................#..",
            "..#..@...................................#####.............................o.#..",
            "..#..........####.......o....................................................#..",
            "..#..........#..#................................................#####.......#..",
            "..############..###############...####################.....#######...#########..",
            "..............................#...#..................#.....#....................",
            "..............................#+++#..................#+++++#....................",
            "..............................#+++#..................#+++++#....................",
            "..............................#####..................#######....................",
            "................................................................................",
            "................................................................................",
    };
    std::vector<sf::String> level2 = {
            "................................................................................",
            "................................................................................",
            "....###############################.............................................",
            "...##.............................##########################################....",
            "...#.......................................................................##...",
            "...#....o...................................................................#...",
            "...#................................................=.......................#...",
            "...#.o........################...................o..o...........|........o..#...",
            "...#.........................#..............................................#...",
            "...#....o....................##########.....###################....##########...",
            "...#..................................#+++++#.................#....#............",
            "...###############....oo......=o.o.o..#######.###############.#....#............",
            ".....#...............o..o.............#.......#......#........#....#............",
            ".....#....................#############..######.####.#.########....########.....",
            ".....#.............########..............#...........#.#..................#.....",
            ".....#..........####......####...#####################.#..................#.....",
            ".....#........###............###.......................########....########.....",
            ".....#.......##................#########################......#....#............",
            ".....#.......#................................................#....#............",
            ".....###......................................................#....#............",
            ".......#...............o...........................................#............",
            ".......#...............................................o...........#............",
            ".......#########......###.....############.........................##...........",
            ".............#..................#........#####....#######.o.........########....",
            ".............#++++++++++++++++++#............#....#.....#..................#....",
            ".............#++++++++++++++++++#..........###....###...####.o.............#....",
            ".............####################..........#........#......#.....|.........#....",
            "...........................................#++++++++#......####........@...#....",
            "...........................................#++++++++#.........#............#....",
            "...........................................#++++++++#.........##############....",
            "...........................................##########...........................",
            "................................................................................",
    };
    std::vector<sf::String> level3 = {
            "......................................#++#........................#######.........############################+#.#",
            "......................................#++#.....................####.....####....##...........................#+#.#",
            "......................................#++##########...........##...........##..##............................#+#.#",
            "......................................##++++++++++##.........##.............##...............................#+#.#",
            ".......................................##########++#.........#....................................o...o...o..#+#.#",
            "................................................##+#.........#.....o...o....................................##+#.#",
            ".................................................#+#.........#................................###############++#.#",
            ".................................................#v#.........#.....#...#........................++++++++++++++##.#",
            "##...........................................................##..|...|...|..##............#####################..#",
            "#.............................................................##+++++++++++##............v.......................#",
            "#..............................................................####+++++####.....................................#",
            "#..............................................#.....#............#######........###.........###.................#",
            "#..............................................#.....#...........................#.#.........#.#.................#",
            "#..............................................#.....#.............................#.........#...................#",
            "#..............................................#.....#.............................##.......##...................#",
            "#..............................................##....#.............................#.........#...................#",
            "#..............................................#.....#......o..o.....#...#.........#.........#...................#",
            "#..............#######........###...###........#.....#...............#...#.........#.........#...................#",
            "#.............##.....##.........#...#..........#.....#.....######....#...#...#########.......#...................#",
            "#....@.......##.......##........#.o.#..........#....##...............#...#####...............#...................#",
            "#............#.........#........#...#..........#.....#...............#.....o.................#...................#",
            "#...###......#.........#........#...#..........#.....#...............#...........######......#...................#",
            "#...#.#......#.........#.......##.o.##.........#.....#...............#...........#.#.........#...................#",
            "#+++#.#++++++#.........#++++++##.....##++++++++##....#++++++++++.....#.....=.....#.#.........#...................#",
            "#+++#.#++++++#.........#+++++##.......##########.....#+++++++##+.....#############.##..o.o..##...................#",
            "#+++#.#++++++#.........#+++++#....o.................##++++++##.+....................##.....##....................#",
            "#+++#.#++++++#.........#+++++#.....................##++++++##..+.....................#######.....................#",
            "#+++#.#++++++#.........#+++++##.......##############++++++##...+.................................................#",
            "#+++#.#++++++#.........#++++++#########++++++++++++++++++##....+.................................................#",
            "#####.########.........###########################################################################################",
    };
    std::vector<sf::String> level4 = {
            "..............................................................................................................",
            "..............................................................................................................",
            "..............................................................................................................",
            "..............................................................................................................",
            "..........................................................................................................##..",
            "........................................o..................................................................#..",
            "...........................................................................................................#..",
            "........................................#..................................................................#..",
            "........................................#..................................................................#..",
            "........................................#..................................................................#..",
            "........................................#..................................................................#..",
            ".......................................###.................................................................#..",
            ".......................................#.#.................+++........+++..###.............................#..",
            ".......................................#.#.................+#+........+#+..................................#..",
            ".....................................###.###................#....##....#...................................#..",
            "......................................#...#.................#..oo##oo..#.......###.........................#..",
            "......................................#...#.................#....##....#......#+++#........................#..",
            "......................................#...#.................############.......###.........................#..",
            ".....................................##...##......#...#......#.............................................#..",
            "......................................#...#########...########..............#.#............................#..",
            "......................................#...#...........#....................#+++#...........................#..",
            "......................................#...#...........#.....................###............................#..",
            ".....................................##...##..........#....................................................#..",
            "......................................#...#=.=.=.=....#............###.....................................#..",
            "......................................#...#...........#...........#+++#....................................#..",
            "......................................#...#....=.=...=#.....o......###.......###...........................#..",
            ".....................................##...##..........#.....................#+++#..........................#..",
            "..............................o...o...#...#...........#.....#................##v........###................#..",
            "......................................#...#...........#..............#.................#+++#...............#..",
            ".............................###.###.###.###.....o.o..#++++++++++++++#...................v#................#..",
            ".............................#.###.#.#.###.#..........#++++++++++++++#.....................................#..",
            ".............................#.............#...#######################.....................................#..",
            ".............................##...........##.........................................###...................#..",
            "..###.........................#.....#...............................................#+++#..................#..",
            "..#.#.........................#....###...............................................###...................#..",
            "..#...........................#....###....#######........................#####.............................#..",
            "..#...........................#...........#..............................#...#.............................#..",
            "..#...........................##..........#..............................#.#.#.............................#..",
            "..#.......................................#.......|####|....|####|.....###.###.............................#..",
            "..#................###.............o.o....#..............................#.........###.....................#..",
            "..#...............#####.......##..........#.............................###.......#+++#..........#.........#..",
            "..#......@........o###o.......#....###....#.............................#.#........###..........###........#..",
            "..#................###........#############..#.oo.#....#.oo.#....#.oo..##.##....................###........#..",
            "..#.................#.........#...........#++#....#++++#....#++++#....##...##....................#.........#..",
            "..#############################...........#############################.....################################..",
            "..............................................................................................................",
            "..............................................................................................................",
    };
    std::vector<sf::String> level5 = {
            "#.................................................................................................###.#.......",
            "#.....................................................................................................#.......",
            "#.................................................................................................#####.......",
            "#.................................................................................................#...........",
            "#.................................................................................................#.###.......",
            "#.........................o.......................................................................#.#.#.......",
            "#............................................................................................o.o.o###.#.......",
            "#..................###................................................................................#.......",
            "#......+..o..+................................................#####.#####.#####.#####.#####.#####.#####......#",
            "#......#.....#................................................#...#.#...#.#...#.#...#.#...#.#...#.#..........#",
            "#......#=.o..#............#...................................###.#.###.#.###.#.###.#.###.#.###.#.#####......#",
            "#......#.....#..................................................#.#...#.#...#.#...#.#...#.#...#.#.....#......#",
            "#......+..o..+............o..................................####.#####.#####.#####.#####.#####.#######......#",
            "#............................................................................................................#",
            "#.........o..............###..............................##.................................................#",
            "#............................................................................................................#",
            "#............................................................................................................#",
            "#.....................................................##.....................................................#",
            "#..................###.........###...........................................................................#",
            "#............................................................................................................#",
            "#.........................o.....................................................#......#.....................#",
            "#.........................................................##.....##..........................................#",
            "#............###.........###.........###.................................#..................#................#",
            "#............................................................................................................#",
            "#................................................................||..........................................#",
            "#############................................................................................................#",
            "#...........#.o.#########.o.#########.o.##................................................#..................#",
            "#....@......#...#.......#...#.......#...#.................||..................#.....#........................#",
            "#...........#####...o...#####...o...#####....................................................................#",
            "#########.....................................#####.......##.....##.....###..................................#",
            "........#=..................=................=#...#.....................###..................................#",
            "........#######################################...#+++++++++++++++++++++###++++++++++++++++++++++++++++++++++#",
            "..................................................############################################################",
            "..............................................................................................................",
    };
    std::vector<std::vector<sf::String>> levels = {level1, level2, level3, level4, level5};
    return levels;
}
